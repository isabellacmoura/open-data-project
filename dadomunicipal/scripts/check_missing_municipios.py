#!/usr/bin/env python3
"""
Script para verificar quais munic√≠pios podem estar faltando.
Compara os arquivos .shp encontrados com uma lista de refer√™ncia.
"""

import os
from pathlib import Path

def check_missing_municipios():
    """Verifica quais munic√≠pios podem estar faltando"""
    
    # Lista de refer√™ncia dos 308 munic√≠pios de Portugal (2021)
    municipios_referencia = [
        "Abrantes", "√Ågueda", "Aguiar da Beira", "Alandroal", "Albergaria-a-Velha", 
        "Albufeira", "Alc√°cer do Sal", "Alcanena", "Alcoba√ßa", "Alcochete", 
        "Alcoutim", "Alenquer", "Alf√¢ndega da F√©", "Alij√≥", "Aljezur", 
        "Aljustrel", "Almada", "Almeida", "Almeirim", "Almod√¥var", 
        "Alpiar√ßa", "Alter do Ch√£o", "Alvai√°zere", "Alvito", "Amarante", 
        "Amares", "Amadora", "Anadia", "Angra do Hero√≠smo", "Ansi√£o", 
        "Arcos de Valdevez", "Arganil", "Armamar", "Arouca", "Arraiolos", 
        "Arronches", "Arruda dos Vinhos", "Aveiro", "Avis", "Azambuja", 
        "Bai√£o", "Barcelos", "Barrancos", "Barreiro", "Batalha", 
        "Beja", "Belmonte", "Benavente", "Bombarral", "Borba", 
        "Boticas", "Braga", "Bragan√ßa", "Cabeceiras de Basto", "Cadaval", 
        "Caldas da Rainha", "Calheta", "C√¢mara de Lobos", "Caminha", 
        "Campo Maior", "Cantanhede", "Carrazeda de Ansi√£es", "Carregal do Sal", 
        "Cartaxo", "Cascais", "Castanheira de P√™ra", "Castelo Branco", 
        "Castelo de Paiva", "Castelo de Vide", "Castro Daire", "Castro Marim", 
        "Castro Verde", "Celorico da Beira", "Celorico de Basto", "Chamusca", 
        "Chaves", "Cinf√£es", "Coimbra", "Condeixa-a-Nova", "Const√¢ncia", 
        "Coruche", "Corvo", "Covilh√£", "Crato", "Cuba", 
        "Elvas", "Entroncamento", "Espinho", "Esposende", "Estarreja", 
        "Estremoz", "√âvora", "Fafe", "Faro", "Felgueiras", 
        "Ferreira do Alentejo", "Ferreira do Z√™zere", "Figueira da Foz", "Figueira de Castelo Rodrigo", 
        "Figueir√≥ dos Vinhos", "Fornos de Algodres", "Freixo de Espada √† Cinta", "Fronteira", 
        "Funchal", "Gavi√£o", "G√≥is", "Goleg√£", "Gondomar", 
        "Gr√¢ndola", "Guarda", "Horta", "Idanha-a-Nova", "√çlhavo", 
        "Lagoa", "Lagos", "Lajes das Flores", "Lajes do Pico", "Lamego", 
        "Leiria", "Lisboa", "Loul√©", "Loures", "Lous√£", 
        "Lousada", "Macedo de Cavaleiros", "Machico", "Madalena", "Mafra", 
        "Maia", "Mangualde", "Manteigas", "Marco de Canaveses", "Marinha Grande", 
        "Marv√£o", "Matosinhos", "Ma√ß√£o", "M√™da", "Melga√ßo", 
        "M√©rtola", "Mes√£o Frio", "Mira", "Miranda do Corvo", "Miranda do Douro", 
        "Mirandela", "Mogadouro", "Moimenta da Beira", "Moita", "Monchique", 
        "Mon√ß√£o", "Monforte", "Montalegre", "Montemor-o-Novo", "Montemor-o-Velho", 
        "Montijo", "Mora", "Mort√°gua", "Moura", "Mour√£o", 
        "Murtosa", "Mur√ßa", "Nazar√©", "Nelas", "Nisa", 
        "Nordeste", "Odemira", "Odivelas", "Oeiras", "Oleiros", 
        "Olh√£o", "Oliveira de Azem√©is", "Oliveira de Frades", "Oliveira do Bairro", "Oliveira do Hospital", 
        "Our√©m", "Ourique", "Ovar", "Pa√ßos de Ferreira", "Palmela", 
        "Pampilhosa da Serra", "Paredes", "Paredes de Coura", "Pedr√≥g√£o Grande", "Penacova", 
        "Penafiel", "Penamacor", "Penedono", "Penela", "Peniche", 
        "Peso da R√©gua", "Pinhel", "Ponta Delgada", "Ponta do Sol", "Ponte da Barca", 
        "Ponte de Lima", "Ponte de S√¥r", "Portalegre", "Portel", "Portim√£o", 
        "Porto", "Porto de M√≥s", "Porto Moniz", "Porto Santo", "P√≥voa de Lanhoso", 
        "P√≥voa de Varzim", "Povoa√ß√£o", "Proen√ßa-a-Nova", "Redondo", "Reguengos de Monsaraz", 
        "Resende", "Ribeira Brava", "Ribeira de Pena", "Ribeira Grande", "Rio Maior", 
        "Sabrosa", "Sabugal", "Salvaterra de Magos", "Santa Comba D√£o", "Santa Cruz", 
        "Santa Cruz da Graciosa", "Santa Cruz das Flores", "Santa Maria da Feira", "Santa Marta de Penagui√£o", 
        "Santana", "Santar√©m", "Santiago do Cac√©m", "Santo Tirso", "S√£o Br√°s de Alportel", 
        "S√£o Jo√£o da Madeira", "S√£o Jo√£o da Pesqueira", "S√£o Pedro do Sul", "S√£o Roque do Pico", "S√£o Vicente", 
        "Sardoal", "Seia", "Seixal", "Sernancelhe", "Serpa", 
        "Sert√£", "Sesimbra", "Set√∫bal", "Sever do Vouga", "Silves", 
        "Sines", "Sintra", "Sobral de Monte Agra√ßo", "Sousel", "T√°bua", 
        "Tabua√ßo", "Tarouca", "Tavira", "Terras de Bouro", "Tomar", 
        "Tondela", "Torre de Moncorvo", "Torres Novas", "Torres Vedras", "Trancoso", 
        "Trofa", "Vagos", "Vale de Cambra", "Valen√ßa", "Valongo", 
        "Valpa√ßos", "Velas", "Viana do Alentejo", "Viana do Castelo", "Vidigueira", 
        "Vieira do Minho", "Vila de Rei", "Vila do Bispo", "Vila do Conde", "Vila do Porto", 
        "Vila Flor", "Vila Franca de Xira", "Vila Franca do Campo", "Vila Nova da Barquinha", "Vila Nova de Cerveira", 
        "Vila Nova de Famalic√£o", "Vila Nova de Foz C√¥a", "Vila Nova de Gaia", "Vila Nova de Paiva", "Vila Nova de Poiares", 
        "Vila Pouca de Aguiar", "Vila Real", "Vila Real de Santo Ant√≥nio", "Vila Verde", "Vila Velha de R√≥d√£o", 
        "Vila Vi√ßosa", "Vimioso", "Vinhais", "Viseu", "Vizela", 
        "Vouzela"
    ]
    
    # Pasta onde est√£o os arquivos .shp
    input_dir = "/Users/isabellamoura/Documents/References_DATA/Proj.Municipios/Concelhos"
    input_path = Path(input_dir)
    
    if not input_path.exists():
        print(f"‚ùå Pasta n√£o encontrada: {input_dir}")
        return
    
    # Encontrar todos os arquivos .shp
    shp_files = list(input_path.glob("*.shp"))
    municipios_encontrados = [f.stem for f in shp_files]
    
    print(f"üìä An√°lise de Munic√≠pios")
    print("=" * 50)
    print(f"üìÅ Total de refer√™ncia: {len(municipios_referencia)}")
    print(f"üìÅ Total encontrados: {len(municipios_encontrados)}")
    print(f"üìÅ Diferen√ßa: {len(municipios_referencia) - len(municipios_encontrados)}")
    
    # Encontrar munic√≠pios faltantes
    municipios_faltantes = []
    for municipio in municipios_referencia:
        if municipio not in municipios_encontrados:
            municipios_faltantes.append(municipio)
    
    if municipios_faltantes:
        print(f"\n‚ùå Munic√≠pios faltantes ({len(municipios_faltantes)}):")
        for municipio in municipios_faltantes:
            print(f"   - {municipio}")
    else:
        print(f"\n‚úÖ Todos os munic√≠pios encontrados!")
    
    # Verificar se h√° munic√≠pios extras
    municipios_extras = []
    for municipio in municipios_encontrados:
        if municipio not in municipios_referencia:
            municipios_extras.append(municipio)
    
    if municipios_extras:
        print(f"\n‚ö†Ô∏è  Munic√≠pios extras ({len(municipios_extras)}):")
        for municipio in municipios_extras:
            print(f"   - {municipio}")
    
    # Verificar poss√≠veis problemas de nomenclatura
    print(f"\nüîç Verificando poss√≠veis problemas de nomenclatura...")
    
    # Verificar se h√° diferen√ßas de acentos ou mai√∫sculas
    municipios_encontrados_lower = [m.lower() for m in municipios_encontrados]
    municipios_referencia_lower = [m.lower() for m in municipios_referencia]
    
    for municipio in municipios_referencia:
        if municipio.lower() not in municipios_encontrados_lower:
            # Procurar por varia√ß√µes
            for encontrado in municipios_encontrados:
                if municipio.lower() in encontrado.lower() or encontrado.lower() in municipio.lower():
                    print(f"   Poss√≠vel varia√ß√£o: '{municipio}' vs '{encontrado}'")

if __name__ == "__main__":
    check_missing_municipios()
